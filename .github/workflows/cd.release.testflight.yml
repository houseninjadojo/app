name: cd / release

concurrency: testflight-release-lock

on:
  release:
    types:
      - published

env:
  RUBY_VERSION: 3.0.3

jobs:
  web:
    name: build / web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.11
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm env:load
        env:
          DOTENV_IT_TOKEN: ${{ secrets.DOTENV_IT_TOKEN }}
      - run: pnpm build
        env:
          NODE_ENV: production
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: houseninja
          SENTRY_PROJECT: app
        with:
          environment: production
          sourcemaps: dist/assets
          version: co.houseninja.application@${{ steps.package-version.outputs.current-version }}+1
          url_prefix: ~/
          finalize: false
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: houseninja
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - run: pnpm cap sync --deployment
        env:
          NODE_ENV: production
      - run: |
          cp .env.vault ios/App/.env.vault
          cp .env.vault android/app/.env.vault
      - run: |
          tar -czvf web.tar.gz dist
          tar -czvf ios.tar.gz ios
          tar -czvf android.tar.gz android
          tar -czf node_modules.tar.gz node_modules
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: package.json
          path: package.json
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: node_modules.tar.gz
          path: node_modules.tar.gz
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: web.tar.gz
          path: web.tar.gz
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: ios.tar.gz
          path: ios.tar.gz
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: android.tar.gz
          path: android.tar.gz
  ios:
    needs: web
    if: success()
    runs-on: macos-12
    name: build / ios
    timeout-minutes: 30
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.0.app/Contents/Developer
    steps:
      - uses: mathieu-bour/setup-sentry-cli@1.2.0
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          organization: houseninja
          project: app
      - uses: actions/download-artifact@v3
        with:
          name: package.json
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: ios.tar.gz
          path: .
      - run: |
          tar -xzvf ios.tar.gz
          tar -xzf node_modules.tar.gz
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'ios/App'
      - uses: actions/cache@v3
        with:
          path: ios/App/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/App/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - run: pod install --deployment
        working-directory: 'ios/App'
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npx dotenv-vault pull --yes --dotenvMe=$DOTENV_IT_TOKEN
        working-directory: 'ios/App'
        env:
          DOTENV_IT_TOKEN: ${{ secrets.DOTENV_IT_TOKEN }}
      - run: bundle exec fastlane ios sandbox
        working-directory: 'ios/App'
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: House Ninja.ipa
          path: 'ios/App/House Ninja.ipa'
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: House Ninja.app.dSYM.zip
          path: 'ios/App/House Ninja.app.dSYM.zip'
  cleanup:
    needs: [ios]
    if: always()
    runs-on: ubuntu-latest
    name: cleanup
    steps:
      - uses: geekyeggo/delete-artifact@v1
        name: clean artifacts
        with:
          name: |
            node_modules.tar.gz
            android.tar.gz
